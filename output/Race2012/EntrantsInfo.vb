Option Explicit On
'
' Copyright (c) 2014 Crewstone Consulting ltd
'  All rights reserved.
' 
' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED
' TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
' THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
' CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
' DEALINGS IN THE SOFTWARE.
'
Imports System
Imports System.Configuration
Imports System.Data
Imports System.Xml.Serialization
Imports DotNetNuke
Imports DotNetNuke.Common.Utilities

Namespace Namespace.Modules.Race2012

    ''' <summary>
    ''' The Info class for Entrants
    ''' </summary>
    ''' <remarks>
    ''' </remarks>
    ''' <history>
	''' Generated by CodeSmith on Friday, January 17, 2014
    ''' </history>
    ''' -----------------------------------------------------------------------------
    <Serializable(), XmlRoot("Entrants")> _
	Public Class EntrantsInfo
		Implements Entities.Modules.IHydratable

#Region "Private Members"
		Private _runnerId as Integer
		Private _portalId as Integer
		Private _contactType as Integer
		Private _fullName as String = string.Empty
		Private _firstName as String = string.Empty
		Private _middleName as String = string.Empty
		Private _lastName as String = string.Empty
		Private _suffix as String = string.Empty
		Private _nickname as String = string.Empty
		Private _birthDate as DateTime
		Private _age as short
		Private _weight as short
		Private _sex as String = string.Empty
		Private _tShirt as String = string.Empty
		Private _sweats as String = string.Empty
		Private _shorts as String = string.Empty
		Private _shoes as String = string.Empty
		Private _shoeStyle as String = string.Empty
		Private _club as String = string.Empty
		Private _address as String = string.Empty
		Private _city as String = string.Empty
		Private _state as String = string.Empty
		Private _zIP as String = string.Empty
		Private _country as String = string.Empty
		Private _homePhone as String = string.Empty
		Private _mobilePhone as String = string.Empty
		Private _mobileCarrier as String = string.Empty
		Private _eMail as String = string.Empty
		Private _plainText as Boolean
		Private _uSATFNumber as String = string.Empty
		Private _memberType as String = string.Empty
		Private _memberNumber as Integer
		Private _memberCode as String = string.Empty
		Private _dateJoined as DateTime
		Private _lastRenewal as DateTime
		Private _paidThru as DateTime
		Private _waiver as Boolean
		Private _primaryNo as Integer
		Private _survivor as Boolean
		Private _mailingExpiration as DateTime
		Private _memo as String = string.Empty
		Private _marked as Boolean
		Private _keywords as String = string.Empty
		Private _company as String = string.Empty
		Private _title as String = string.Empty
		Private _workAddress as String = string.Empty
		Private _workCity as String = string.Empty
		Private _workState as String = string.Empty
		Private _workZip as String = string.Empty
		Private _workCountry as String = string.Empty
		Private _workPhone as String = string.Empty
		Private _workEmail as String = string.Empty
		Private _activeId as Integer
		Private _invalidEmail as Boolean
		Private _resultsEmailOnly as Boolean
		Private _invalidAddress as Boolean
		Private _userName as String = string.Empty
		Private _password as String = string.Empty
		Private _insertionDate as DateTime
		Private _updateDate as DateTime
#End Region

#Region "Constructors"
        ' initialization
        Public Sub New()
        End Sub
		
        Public Sub New(ByVal runnerId As Integer, ByVal portalId As Integer, ByVal contactType As Integer, ByVal fullName As String, ByVal firstName As String, ByVal middleName As String, ByVal lastName As String, ByVal suffix As String, ByVal nickname As String, ByVal birthDate As DateTime, ByVal age As short, ByVal weight As short, ByVal sex As String, ByVal tShirt As String, ByVal sweats As String, ByVal shorts As String, ByVal shoes As String, ByVal shoeStyle As String, ByVal club As String, ByVal address As String, ByVal city As String, ByVal state As String, ByVal zIP As String, ByVal country As String, ByVal homePhone As String, ByVal mobilePhone As String, ByVal mobileCarrier As String, ByVal eMail As String, ByVal plainText As Boolean, ByVal uSATFNumber As String, ByVal memberType As String, ByVal memberNumber As Integer, ByVal memberCode As String, ByVal dateJoined As DateTime, ByVal lastRenewal As DateTime, ByVal paidThru As DateTime, ByVal waiver As Boolean, ByVal primaryNo As Integer, ByVal survivor As Boolean, ByVal mailingExpiration As DateTime, ByVal memo As String, ByVal marked As Boolean, ByVal keywords As String, ByVal company As String, ByVal title As String, ByVal workAddress As String, ByVal workCity As String, ByVal workState As String, ByVal workZip As String, ByVal workCountry As String, ByVal workPhone As String, ByVal workEmail As String, ByVal activeId As Integer, ByVal invalidEmail As Boolean, ByVal resultsEmailOnly As Boolean, ByVal invalidAddress As Boolean, ByVal userName As String, ByVal password As String, ByVal insertionDate As DateTime, ByVal updateDate As DateTime)
            Me.PortalId = PortalId
            Me.RunnerId = RunnerId
            Me.ContactType = ContactType
            Me.FullName = FullName
            Me.FirstName = FirstName
            Me.MiddleName = MiddleName
            Me.LastName = LastName
            Me.Suffix = Suffix
            Me.Nickname = Nickname
            Me.BirthDate = BirthDate
            Me.Age = Age
            Me.Weight = Weight
            Me.Sex = Sex
            Me.TShirt = TShirt
            Me.Sweats = Sweats
            Me.Shorts = Shorts
            Me.Shoes = Shoes
            Me.ShoeStyle = ShoeStyle
            Me.Club = Club
            Me.Address = Address
            Me.City = City
            Me.State = State
            Me.ZIP = ZIP
            Me.Country = Country
            Me.HomePhone = HomePhone
            Me.MobilePhone = MobilePhone
            Me.MobileCarrier = MobileCarrier
            Me.EMail = EMail
            Me.PlainText = PlainText
            Me.USATFNumber = USATFNumber
            Me.MemberType = MemberType
            Me.MemberNumber = MemberNumber
            Me.MemberCode = MemberCode
            Me.DateJoined = DateJoined
            Me.LastRenewal = LastRenewal
            Me.PaidThru = PaidThru
            Me.Waiver = Waiver
            Me.PrimaryNo = PrimaryNo
            Me.Survivor = Survivor
            Me.MailingExpiration = MailingExpiration
            Me.Memo = Memo
            Me.Marked = Marked
            Me.Keywords = Keywords
            Me.Company = Company
            Me.Title = Title
            Me.WorkAddress = WorkAddress
            Me.WorkCity = WorkCity
            Me.WorkState = WorkState
            Me.WorkZip = WorkZip
            Me.WorkCountry = WorkCountry
            Me.WorkPhone = WorkPhone
            Me.WorkEmail = WorkEmail
            Me.ActiveId = ActiveId
            Me.InvalidEmail = InvalidEmail
            Me.ResultsEmailOnly = ResultsEmailOnly
            Me.InvalidAddress = InvalidAddress
            Me.UserName = UserName
            Me.Password = Password
            Me.InsertionDate = InsertionDate
            Me.UpdateDate = UpdateDate
        End Sub
#End Region

#Region "Public Properties"
		' <summary>
		' Gets and sets the RunnerId
		' Unique Runner Identifier
		' </summary>
        <XmlIgnore()> _
		Public Property RunnerId() as Integer
			Get
				Return _runnerId
			End Get
			Set(ByVal Value as Integer)
				_runnerId = Value
			End Set
		End Property
		
		' <summary>
		' Gets and sets the PortalId
		' </summary>
        <XmlIgnore()> _
        <XmlAttribute("PortalId")> _
		Public Property PortalId() as Integer 
			Get
				Return _portalId
			End Get
			Set(ByVal Value as Integer)
				_portalId = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of PortalId
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property PortalIdText() as String
			Get
				Return _portalId.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the ContactType
		' Contact Type Individual, Club, Team, Organization
		' </summary>
        <XmlAttribute("ContactType")> _
		Public Property ContactType() as Integer 
			Get
				Return _contactType
			End Get
			Set(ByVal Value as Integer)
				_contactType = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of ContactType
		' Contact Type Individual, Club, Team, Organization
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property ContactTypeText() as String
			Get
				Return _contactType.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the FullName
		' Full Name
		' </summary>
        <XmlAttribute("FullName")> _
		Public Property FullName() as String 
			Get
				Return _fullName
			End Get
			Set(ByVal Value as String)
				_fullName = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the FirstName
		' First Name
		' </summary>
        <XmlAttribute("FirstName")> _
		Public Property FirstName() as String 
			Get
				Return _firstName
			End Get
			Set(ByVal Value as String)
				_firstName = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the MiddleName
		' Middle Name
		' </summary>
        <XmlAttribute("MiddleName")> _
		Public Property MiddleName() as String 
			Get
				Return _middleName
			End Get
			Set(ByVal Value as String)
				_middleName = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the LastName
		' Last Name
		' </summary>
        <XmlAttribute("LastName")> _
		Public Property LastName() as String 
			Get
				Return _lastName
			End Get
			Set(ByVal Value as String)
				_lastName = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the Suffix
		' Suffix, such as Jr, Sr, or III
		' </summary>
        <XmlAttribute("Suffix")> _
		Public Property Suffix() as String 
			Get
				Return _suffix
			End Get
			Set(ByVal Value as String)
				_suffix = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the Nickname
		' Nickname
		' </summary>
        <XmlAttribute("Nickname")> _
		Public Property Nickname() as String 
			Get
				Return _nickname
			End Get
			Set(ByVal Value as String)
				_nickname = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the BirthDate
		' Date of Birth
		' </summary>
        <XmlAttribute("BirthDate")> _
		Public Property BirthDate() as DateTime 
			Get
				Return _birthDate
			End Get
			Set(ByVal Value as DateTime)
				_birthDate = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of BirthDate
		' Date of Birth
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property BirthDateText() as String
			Get
				Return _birthDate.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the Age
		' Age
		' </summary>
        <XmlAttribute("Age")> _
		Public Property Age() as short 
			Get
				Return _age
			End Get
			Set(ByVal Value as short)
				_age = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of Age
		' Age
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property AgeText() as String
			Get
				Return _age.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the Weight
		' Weight (for Clydesdale Scoring)
		' </summary>
        <XmlAttribute("Weight")> _
		Public Property Weight() as short 
			Get
				Return _weight
			End Get
			Set(ByVal Value as short)
				_weight = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of Weight
		' Weight (for Clydesdale Scoring)
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property WeightText() as String
			Get
				Return _weight.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the Sex
		' Sex (M or F)
		' </summary>
        <XmlAttribute("Sex")> _
		Public Property Sex() as String 
			Get
				Return _sex
			End Get
			Set(ByVal Value as String)
				_sex = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the TShirt
		' TShirt Size
		' </summary>
        <XmlAttribute("TShirt")> _
		Public Property TShirt() as String 
			Get
				Return _tShirt
			End Get
			Set(ByVal Value as String)
				_tShirt = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the Sweats
		' Sweat Suit Size
		' </summary>
        <XmlAttribute("Sweats")> _
		Public Property Sweats() as String 
			Get
				Return _sweats
			End Get
			Set(ByVal Value as String)
				_sweats = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the Shorts
		' Shorts Size
		' </summary>
        <XmlAttribute("Shorts")> _
		Public Property Shorts() as String 
			Get
				Return _shorts
			End Get
			Set(ByVal Value as String)
				_shorts = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the Shoes
		' Shoe Size
		' </summary>
        <XmlAttribute("Shoes")> _
		Public Property Shoes() as String 
			Get
				Return _shoes
			End Get
			Set(ByVal Value as String)
				_shoes = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the ShoeStyle
		' </summary>
        <XmlAttribute("ShoeStyle")> _
		Public Property ShoeStyle() as String 
			Get
				Return _shoeStyle
			End Get
			Set(ByVal Value as String)
				_shoeStyle = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the Club
		' Running Club
		' </summary>
        <XmlAttribute("Club")> _
		Public Property Club() as String 
			Get
				Return _club
			End Get
			Set(ByVal Value as String)
				_club = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the Address
		' Mailing Address
		' </summary>
        <XmlAttribute("Address")> _
		Public Property Address() as String 
			Get
				Return _address
			End Get
			Set(ByVal Value as String)
				_address = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the City
		' Mailing City
		' </summary>
        <XmlAttribute("City")> _
		Public Property City() as String 
			Get
				Return _city
			End Get
			Set(ByVal Value as String)
				_city = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the State
		' Mailing State
		' </summary>
        <XmlAttribute("State")> _
		Public Property State() as String 
			Get
				Return _state
			End Get
			Set(ByVal Value as String)
				_state = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the ZIP
		' Mailing ZIP Code
		' </summary>
        <XmlAttribute("ZIP")> _
		Public Property ZIP() as String 
			Get
				Return _zIP
			End Get
			Set(ByVal Value as String)
				_zIP = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the Country
		' Country
		' </summary>
        <XmlAttribute("Country")> _
		Public Property Country() as String 
			Get
				Return _country
			End Get
			Set(ByVal Value as String)
				_country = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the HomePhone
		' Home Phone Number
		' </summary>
        <XmlAttribute("HomePhone")> _
		Public Property HomePhone() as String 
			Get
				Return _homePhone
			End Get
			Set(ByVal Value as String)
				_homePhone = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the MobilePhone
		' Mobile Phone Number
		' </summary>
        <XmlAttribute("MobilePhone")> _
		Public Property MobilePhone() as String 
			Get
				Return _mobilePhone
			End Get
			Set(ByVal Value as String)
				_mobilePhone = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the MobileCarrier
		' Mobile Phone Carrier (i.e. AT&T, etc)
		' </summary>
        <XmlAttribute("MobileCarrier")> _
		Public Property MobileCarrier() as String 
			Get
				Return _mobileCarrier
			End Get
			Set(ByVal Value as String)
				_mobileCarrier = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the EMail
		' Email Address
		' </summary>
        <XmlAttribute("EMail")> _
		Public Property EMail() as String 
			Get
				Return _eMail
			End Get
			Set(ByVal Value as String)
				_eMail = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the PlainText
		' Plain Text Emails Only
		' </summary>
        <XmlAttribute("PlainText")> _
		Public Property PlainText() as Boolean 
			Get
				Return _plainText
			End Get
			Set(ByVal Value as Boolean)
				_plainText = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of PlainText
		' Plain Text Emails Only
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property PlainTextText() as String
			Get
				Return _plainText.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the USATFNumber
		' USATF Membership Number
		' </summary>
        <XmlAttribute("USATFNumber")> _
		Public Property USATFNumber() as String 
			Get
				Return _uSATFNumber
			End Get
			Set(ByVal Value as String)
				_uSATFNumber = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the MemberType
		' Membership Type
		' </summary>
        <XmlAttribute("MemberType")> _
		Public Property MemberType() as String 
			Get
				Return _memberType
			End Get
			Set(ByVal Value as String)
				_memberType = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the MemberNumber
		' Membership number
		' </summary>
        <XmlAttribute("MemberNumber")> _
		Public Property MemberNumber() as Integer 
			Get
				Return _memberNumber
			End Get
			Set(ByVal Value as Integer)
				_memberNumber = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of MemberNumber
		' Membership number
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property MemberNumberText() as String
			Get
				Return _memberNumber.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the MemberCode
		' Membership Code
		' </summary>
        <XmlAttribute("MemberCode")> _
		Public Property MemberCode() as String 
			Get
				Return _memberCode
			End Get
			Set(ByVal Value as String)
				_memberCode = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the DateJoined
		' Date Membership Began
		' </summary>
        <XmlAttribute("DateJoined")> _
		Public Property DateJoined() as DateTime 
			Get
				Return _dateJoined
			End Get
			Set(ByVal Value as DateTime)
				_dateJoined = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of DateJoined
		' Date Membership Began
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property DateJoinedText() as String
			Get
				Return _dateJoined.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the LastRenewal
		' Date of Last Renewal
		' </summary>
        <XmlAttribute("LastRenewal")> _
		Public Property LastRenewal() as DateTime 
			Get
				Return _lastRenewal
			End Get
			Set(ByVal Value as DateTime)
				_lastRenewal = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of LastRenewal
		' Date of Last Renewal
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property LastRenewalText() as String
			Get
				Return _lastRenewal.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the PaidThru
		' Year Membership Dues are Paid Thru
		' </summary>
        <XmlAttribute("PaidThru")> _
		Public Property PaidThru() as DateTime 
			Get
				Return _paidThru
			End Get
			Set(ByVal Value as DateTime)
				_paidThru = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of PaidThru
		' Year Membership Dues are Paid Thru
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property PaidThruText() as String
			Get
				Return _paidThru.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the Waiver
		' Has this person signed a club waiver?
		' </summary>
        <XmlAttribute("Waiver")> _
		Public Property Waiver() as Boolean 
			Get
				Return _waiver
			End Get
			Set(ByVal Value as Boolean)
				_waiver = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of Waiver
		' Has this person signed a club waiver?
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property WaiverText() as String
			Get
				Return _waiver.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the PrimaryNo
		' Primary Member Id
		' </summary>
        <XmlAttribute("PrimaryNo")> _
		Public Property PrimaryNo() as Integer 
			Get
				Return _primaryNo
			End Get
			Set(ByVal Value as Integer)
				_primaryNo = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of PrimaryNo
		' Primary Member Id
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property PrimaryNoText() as String
			Get
				Return _primaryNo.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the Survivor
		' Cancer Surviror
		' </summary>
        <XmlAttribute("Survivor")> _
		Public Property Survivor() as Boolean 
			Get
				Return _survivor
			End Get
			Set(ByVal Value as Boolean)
				_survivor = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of Survivor
		' Cancer Surviror
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property SurvivorText() as String
			Get
				Return _survivor.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the MailingExpiration
		' Date when regular mailings should cease
		' </summary>
        <XmlAttribute("MailingExpiration")> _
		Public Property MailingExpiration() as DateTime 
			Get
				Return _mailingExpiration
			End Get
			Set(ByVal Value as DateTime)
				_mailingExpiration = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of MailingExpiration
		' Date when regular mailings should cease
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property MailingExpirationText() as String
			Get
				Return _mailingExpiration.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the Memo
		' Notes
		' </summary>
        <XmlAttribute("Memo")> _
		Public Property Memo() as String 
			Get
				Return _memo
			End Get
			Set(ByVal Value as String)
				_memo = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the Marked
		' Marking flag for selections
		' </summary>
        <XmlAttribute("Marked")> _
		Public Property Marked() as Boolean 
			Get
				Return _marked
			End Get
			Set(ByVal Value as Boolean)
				_marked = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of Marked
		' Marking flag for selections
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property MarkedText() as String
			Get
				Return _marked.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the Keywords
		' Keyword Identifiers
		' </summary>
        <XmlAttribute("Keywords")> _
		Public Property Keywords() as String 
			Get
				Return _keywords
			End Get
			Set(ByVal Value as String)
				_keywords = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the Company
		' Place of Employment
		' </summary>
        <XmlAttribute("Company")> _
		Public Property Company() as String 
			Get
				Return _company
			End Get
			Set(ByVal Value as String)
				_company = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the Title
		' Job Title
		' </summary>
        <XmlAttribute("Title")> _
		Public Property Title() as String 
			Get
				Return _title
			End Get
			Set(ByVal Value as String)
				_title = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the WorkAddress
		' Work Address
		' </summary>
        <XmlAttribute("WorkAddress")> _
		Public Property WorkAddress() as String 
			Get
				Return _workAddress
			End Get
			Set(ByVal Value as String)
				_workAddress = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the WorkCity
		' Work City
		' </summary>
        <XmlAttribute("WorkCity")> _
		Public Property WorkCity() as String 
			Get
				Return _workCity
			End Get
			Set(ByVal Value as String)
				_workCity = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the WorkState
		' Work State
		' </summary>
        <XmlAttribute("WorkState")> _
		Public Property WorkState() as String 
			Get
				Return _workState
			End Get
			Set(ByVal Value as String)
				_workState = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the WorkZip
		' Work ZIP Code
		' </summary>
        <XmlAttribute("WorkZip")> _
		Public Property WorkZip() as String 
			Get
				Return _workZip
			End Get
			Set(ByVal Value as String)
				_workZip = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the WorkCountry
		' Work Country
		' </summary>
        <XmlAttribute("WorkCountry")> _
		Public Property WorkCountry() as String 
			Get
				Return _workCountry
			End Get
			Set(ByVal Value as String)
				_workCountry = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the WorkPhone
		' Work Phone Number
		' </summary>
        <XmlAttribute("WorkPhone")> _
		Public Property WorkPhone() as String 
			Get
				Return _workPhone
			End Get
			Set(ByVal Value as String)
				_workPhone = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the WorkEmail
		' Work Email Address
		' </summary>
        <XmlAttribute("WorkEmail")> _
		Public Property WorkEmail() as String 
			Get
				Return _workEmail
			End Get
			Set(ByVal Value as String)
				_workEmail = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the ActiveId
		' Unique On-Line Registration Identifier
		' </summary>
        <XmlAttribute("ActiveId")> _
		Public Property ActiveId() as Integer 
			Get
				Return _activeId
			End Get
			Set(ByVal Value as Integer)
				_activeId = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of ActiveId
		' Unique On-Line Registration Identifier
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property ActiveIdText() as String
			Get
				Return _activeId.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the InvalidEmail
		' </summary>
        <XmlAttribute("InvalidEmail")> _
		Public Property InvalidEmail() as Boolean 
			Get
				Return _invalidEmail
			End Get
			Set(ByVal Value as Boolean)
				_invalidEmail = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of InvalidEmail
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property InvalidEmailText() as String
			Get
				Return _invalidEmail.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the ResultsEmailOnly
		' </summary>
        <XmlAttribute("ResultsEmailOnly")> _
		Public Property ResultsEmailOnly() as Boolean 
			Get
				Return _resultsEmailOnly
			End Get
			Set(ByVal Value as Boolean)
				_resultsEmailOnly = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of ResultsEmailOnly
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property ResultsEmailOnlyText() as String
			Get
				Return _resultsEmailOnly.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the InvalidAddress
		' </summary>
        <XmlAttribute("InvalidAddress")> _
		Public Property InvalidAddress() as Boolean 
			Get
				Return _invalidAddress
			End Get
			Set(ByVal Value as Boolean)
				_invalidAddress = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of InvalidAddress
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property InvalidAddressText() as String
			Get
				Return _invalidAddress.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the UserName
		' DNN User Name
		' </summary>
        <XmlAttribute("UserName")> _
		Public Property UserName() as String 
			Get
				Return _userName
			End Get
			Set(ByVal Value as String)
				_userName = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the Password
		' DNN Password
		' </summary>
        <XmlAttribute("Password")> _
		Public Property Password() as String 
			Get
				Return _password
			End Get
			Set(ByVal Value as String)
				_password = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the InsertionDate
		' Date record was added to database
		' </summary>
        <XmlAttribute("InsertionDate")> _
		Public Property InsertionDate() as DateTime 
			Get
				Return _insertionDate
			End Get
			Set(ByVal Value as DateTime)
				_insertionDate = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of InsertionDate
		' Date record was added to database
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property InsertionDateText() as String
			Get
				Return _insertionDate.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the UpdateDate
		' Date record was last updated
		' </summary>
        <XmlAttribute("UpdateDate")> _
		Public Property UpdateDate() as DateTime 
			Get
				Return _updateDate
			End Get
			Set(ByVal Value as DateTime)
				_updateDate = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of UpdateDate
		' Date record was last updated
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property UpdateDateText() as String
			Get
				Return _updateDate.ToString()
			End Get
		End Property
#End Region

#Region "IHydratable Implementation"
       <XmlIgnore()> _
       Public Property KeyID() As Integer Implements Entities.Modules.IHydratable.KeyID
            Get
		       Return RunnerId 
            End Get
            Set(ByVal value As Integer)
		       RunnerId = value
		       End Set
        End Property
 
        Public Sub Fill(ByVal dr As IDataReader) Implements Entities.Modules.IHydratable.Fill
  
		       RunnerId = Convert.ToInt32(Null.SetNull(dr.Item("RunnerId"), RunnerId))
		       PortalId = Convert.ToInt32(Null.SetNull(dr.Item("PortalId"), PortalId))
		       ContactType = Convert.ToInt32(Null.SetNull(dr.Item("ContactType"), ContactType))
		       FullName = Convert.ToString(Null.SetNull(dr.Item("FullName"), FullName))
		       FirstName = Convert.ToString(Null.SetNull(dr.Item("FirstName"), FirstName))
		       MiddleName = Convert.ToString(Null.SetNull(dr.Item("MiddleName"), MiddleName))
		       LastName = Convert.ToString(Null.SetNull(dr.Item("LastName"), LastName))
		       Suffix = Convert.ToString(Null.SetNull(dr.Item("Suffix"), Suffix))
		       Nickname = Convert.ToString(Null.SetNull(dr.Item("Nickname"), Nickname))
		       BirthDate = Convert.ToDateTime(Null.SetNull(dr.Item("BirthDate"), BirthDate))
		       Age = Convert.ToInt16(Null.SetNull(dr.Item("Age"), Age))
		       Weight = Convert.ToInt16(Null.SetNull(dr.Item("Weight"), Weight))
		       Sex = Convert.ToString(Null.SetNull(dr.Item("Sex"), Sex))
		       TShirt = Convert.ToString(Null.SetNull(dr.Item("TShirt"), TShirt))
		       Sweats = Convert.ToString(Null.SetNull(dr.Item("Sweats"), Sweats))
		       Shorts = Convert.ToString(Null.SetNull(dr.Item("Shorts"), Shorts))
		       Shoes = Convert.ToString(Null.SetNull(dr.Item("Shoes"), Shoes))
		       ShoeStyle = Convert.ToString(Null.SetNull(dr.Item("ShoeStyle"), ShoeStyle))
		       Club = Convert.ToString(Null.SetNull(dr.Item("Club"), Club))
		       Address = Convert.ToString(Null.SetNull(dr.Item("Address"), Address))
		       City = Convert.ToString(Null.SetNull(dr.Item("City"), City))
		       State = Convert.ToString(Null.SetNull(dr.Item("State"), State))
		       ZIP = Convert.ToString(Null.SetNull(dr.Item("ZIP"), ZIP))
		       Country = Convert.ToString(Null.SetNull(dr.Item("Country"), Country))
		       HomePhone = Convert.ToString(Null.SetNull(dr.Item("HomePhone"), HomePhone))
		       MobilePhone = Convert.ToString(Null.SetNull(dr.Item("MobilePhone"), MobilePhone))
		       MobileCarrier = Convert.ToString(Null.SetNull(dr.Item("MobileCarrier"), MobileCarrier))
		       EMail = Convert.ToString(Null.SetNull(dr.Item("EMail"), EMail))
		       PlainText = Convert.ToBoolean(Null.SetNull(dr.Item("PlainText"), PlainText))
		       USATFNumber = Convert.ToString(Null.SetNull(dr.Item("USATFNumber"), USATFNumber))
		       MemberType = Convert.ToString(Null.SetNull(dr.Item("MemberType"), MemberType))
		       MemberNumber = Convert.ToInt32(Null.SetNull(dr.Item("MemberNumber"), MemberNumber))
		       MemberCode = Convert.ToString(Null.SetNull(dr.Item("MemberCode"), MemberCode))
		       DateJoined = Convert.ToDateTime(Null.SetNull(dr.Item("DateJoined"), DateJoined))
		       LastRenewal = Convert.ToDateTime(Null.SetNull(dr.Item("LastRenewal"), LastRenewal))
		       PaidThru = Convert.ToDateTime(Null.SetNull(dr.Item("PaidThru"), PaidThru))
		       Waiver = Convert.ToBoolean(Null.SetNull(dr.Item("Waiver"), Waiver))
		       PrimaryNo = Convert.ToInt32(Null.SetNull(dr.Item("PrimaryNo"), PrimaryNo))
		       Survivor = Convert.ToBoolean(Null.SetNull(dr.Item("Survivor"), Survivor))
		       MailingExpiration = Convert.ToDateTime(Null.SetNull(dr.Item("MailingExpiration"), MailingExpiration))
		       Memo = Convert.ToString(Null.SetNull(dr.Item("Memo"), Memo))
		       Marked = Convert.ToBoolean(Null.SetNull(dr.Item("Marked"), Marked))
		       Keywords = Convert.ToString(Null.SetNull(dr.Item("Keywords"), Keywords))
		       Company = Convert.ToString(Null.SetNull(dr.Item("Company"), Company))
		       Title = Convert.ToString(Null.SetNull(dr.Item("Title"), Title))
		       WorkAddress = Convert.ToString(Null.SetNull(dr.Item("WorkAddress"), WorkAddress))
		       WorkCity = Convert.ToString(Null.SetNull(dr.Item("WorkCity"), WorkCity))
		       WorkState = Convert.ToString(Null.SetNull(dr.Item("WorkState"), WorkState))
		       WorkZip = Convert.ToString(Null.SetNull(dr.Item("WorkZip"), WorkZip))
		       WorkCountry = Convert.ToString(Null.SetNull(dr.Item("WorkCountry"), WorkCountry))
		       WorkPhone = Convert.ToString(Null.SetNull(dr.Item("WorkPhone"), WorkPhone))
		       WorkEmail = Convert.ToString(Null.SetNull(dr.Item("WorkEmail"), WorkEmail))
		       ActiveId = Convert.ToInt32(Null.SetNull(dr.Item("ActiveId"), ActiveId))
		       InvalidEmail = Convert.ToBoolean(Null.SetNull(dr.Item("InvalidEmail"), InvalidEmail))
		       ResultsEmailOnly = Convert.ToBoolean(Null.SetNull(dr.Item("ResultsEmailOnly"), ResultsEmailOnly))
		       InvalidAddress = Convert.ToBoolean(Null.SetNull(dr.Item("InvalidAddress"), InvalidAddress))
		       UserName = Convert.ToString(Null.SetNull(dr.Item("UserName"), UserName))
		       Password = Convert.ToString(Null.SetNull(dr.Item("Password"), Password))
		       InsertionDate = Convert.ToDateTime(Null.SetNull(dr.Item("InsertionDate"), InsertionDate))
		       UpdateDate = Convert.ToDateTime(Null.SetNull(dr.Item("UpdateDate"), UpdateDate))
		End Sub
#End Region
    End Class

End Namespace
