Option Explicit On
'
' Copyright (c) 2014 Crewstone Consulting ltd
'  All rights reserved.
' 
' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED
' TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
' THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
' CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
' DEALINGS IN THE SOFTWARE.
'
Imports System
Imports System.Configuration
Imports System.Data
Imports System.Xml.Serialization
Imports DotNetNuke
Imports DotNetNuke.Common.Utilities

Namespace Namespace.Modules.Race2012

    ''' <summary>
    ''' The Info class for Races
    ''' </summary>
    ''' <remarks>
    ''' </remarks>
    ''' <history>
	''' Generated by CodeSmith on Friday, January 17, 2014
    ''' </history>
    ''' -----------------------------------------------------------------------------
    <Serializable(), XmlRoot("Races")> _
	Public Class RacesInfo
		Implements Entities.Modules.IHydratable

#Region "Private Members"
		Private _raceId as Integer
		Private _portalId as Integer
		Private _eventType as Integer
		Private _raceName as String = string.Empty
		Private _raceDate as DateTime
		Private _raceDistance as Single
		Private _raceLocation as String = string.Empty
		Private _raceCity as String = string.Empty
		Private _raceState as String = string.Empty
		Private _raceCountry as String = string.Empty
		Private _raceLogo as String = string.Empty
		Private _uSATFNumber as String = string.Empty
		Private _rodaleEventId as Integer
		Private _activeEventId as Integer
		Private _preregistrationDate as DateTime
		Private _preregistrationFee as decimal
		Private _raceDayFee as decimal
		Private _registrationURL as String = string.Empty
		Private _registrationLogo as String = string.Empty
		Private _description as String = string.Empty
		Private _emailText as String = string.Empty
		Private _resultsText as String = string.Empty
		Private _resultsURL as String = string.Empty
		Private _annual as short
		Private _keyword as String = string.Empty
		Private _lastBibNumber as double
		Private _contactName as String = string.Empty
		Private _contactAddress1 as String = string.Empty
		Private _contactAddress2 as String = string.Empty
		Private _contactCity as String = string.Empty
		Private _contactState as String = string.Empty
		Private _contactZIP as String = string.Empty
		Private _contactPhoneNumber as String = string.Empty
		Private _contactFAX as String = string.Empty
		Private _contactEMail as String = string.Empty
		Private _wEBSite as String = string.Empty
		Private _relatedRace as Integer
		Private _organization as Integer
		Private _volunteerContact as String = string.Empty
		Private _volunteerPhone as String = string.Empty
		Private _volunteerEmail as String = string.Empty
		Private _displayStartDate as DateTime
		Private _displayEndDate as DateTime
		Private _insertionDate as DateTime
		Private _modificationDate as DateTime
#End Region

#Region "Constructors"
        ' initialization
        Public Sub New()
        End Sub
		
        Public Sub New(ByVal raceId As Integer, ByVal portalId As Integer, ByVal eventType As Integer, ByVal raceName As String, ByVal raceDate As DateTime, ByVal raceDistance As Single, ByVal raceLocation As String, ByVal raceCity As String, ByVal raceState As String, ByVal raceCountry As String, ByVal raceLogo As String, ByVal uSATFNumber As String, ByVal rodaleEventId As Integer, ByVal activeEventId As Integer, ByVal preregistrationDate As DateTime, ByVal preregistrationFee As decimal, ByVal raceDayFee As decimal, ByVal registrationURL As String, ByVal registrationLogo As String, ByVal description As String, ByVal emailText As String, ByVal resultsText As String, ByVal resultsURL As String, ByVal annual As short, ByVal keyword As String, ByVal lastBibNumber As double, ByVal contactName As String, ByVal contactAddress1 As String, ByVal contactAddress2 As String, ByVal contactCity As String, ByVal contactState As String, ByVal contactZIP As String, ByVal contactPhoneNumber As String, ByVal contactFAX As String, ByVal contactEMail As String, ByVal wEBSite As String, ByVal relatedRace As Integer, ByVal organization As Integer, ByVal volunteerContact As String, ByVal volunteerPhone As String, ByVal volunteerEmail As String, ByVal displayStartDate As DateTime, ByVal displayEndDate As DateTime, ByVal insertionDate As DateTime, ByVal modificationDate As DateTime)
            Me.PortalId = PortalId
            Me.RaceId = RaceId
            Me.EventType = EventType
            Me.RaceName = RaceName
            Me.RaceDate = RaceDate
            Me.RaceDistance = RaceDistance
            Me.RaceLocation = RaceLocation
            Me.RaceCity = RaceCity
            Me.RaceState = RaceState
            Me.RaceCountry = RaceCountry
            Me.RaceLogo = RaceLogo
            Me.USATFNumber = USATFNumber
            Me.RodaleEventId = RodaleEventId
            Me.ActiveEventId = ActiveEventId
            Me.PreregistrationDate = PreregistrationDate
            Me.PreregistrationFee = PreregistrationFee
            Me.RaceDayFee = RaceDayFee
            Me.RegistrationURL = RegistrationURL
            Me.RegistrationLogo = RegistrationLogo
            Me.Description = Description
            Me.EmailText = EmailText
            Me.ResultsText = ResultsText
            Me.ResultsURL = ResultsURL
            Me.Annual = Annual
            Me.Keyword = Keyword
            Me.LastBibNumber = LastBibNumber
            Me.ContactName = ContactName
            Me.ContactAddress1 = ContactAddress1
            Me.ContactAddress2 = ContactAddress2
            Me.ContactCity = ContactCity
            Me.ContactState = ContactState
            Me.ContactZIP = ContactZIP
            Me.ContactPhoneNumber = ContactPhoneNumber
            Me.ContactFAX = ContactFAX
            Me.ContactEMail = ContactEMail
            Me.WEBSite = WEBSite
            Me.RelatedRace = RelatedRace
            Me.Organization = Organization
            Me.VolunteerContact = VolunteerContact
            Me.VolunteerPhone = VolunteerPhone
            Me.VolunteerEmail = VolunteerEmail
            Me.DisplayStartDate = DisplayStartDate
            Me.DisplayEndDate = DisplayEndDate
            Me.InsertionDate = InsertionDate
            Me.ModificationDate = ModificationDate
        End Sub
#End Region

#Region "Public Properties"
		' <summary>
		' Gets and sets the RaceId
		' This is a unique number identifying each race
		' </summary>
        <XmlIgnore()> _
		Public Property RaceId() as Integer
			Get
				Return _raceId
			End Get
			Set(ByVal Value as Integer)
				_raceId = Value
			End Set
		End Property
		
		' <summary>
		' Gets and sets the PortalId
		' </summary>
        <XmlIgnore()> _
        <XmlAttribute("PortalId")> _
		Public Property PortalId() as Integer 
			Get
				Return _portalId
			End Get
			Set(ByVal Value as Integer)
				_portalId = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of PortalId
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property PortalIdText() as String
			Get
				Return _portalId.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the EventType
		' Event Type Race, Social
		' </summary>
        <XmlAttribute("EventType")> _
		Public Property EventType() as Integer 
			Get
				Return _eventType
			End Get
			Set(ByVal Value as Integer)
				_eventType = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of EventType
		' Event Type Race, Social
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property EventTypeText() as String
			Get
				Return _eventType.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the RaceName
		' The name of the race
		' </summary>
        <XmlAttribute("RaceName")> _
		Public Property RaceName() as String 
			Get
				Return _raceName
			End Get
			Set(ByVal Value as String)
				_raceName = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the RaceDate
		' The date and time of the race
		' </summary>
        <XmlAttribute("RaceDate")> _
		Public Property RaceDate() as DateTime 
			Get
				Return _raceDate
			End Get
			Set(ByVal Value as DateTime)
				_raceDate = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of RaceDate
		' The date and time of the race
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property RaceDateText() as String
			Get
				Return _raceDate.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the RaceDistance
		' Race Distance
		' </summary>
        <XmlAttribute("RaceDistance")> _
		Public Property RaceDistance() as Single 
			Get
				Return _raceDistance
			End Get
			Set(ByVal Value as Single)
				_raceDistance = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of RaceDistance
		' Race Distance
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property RaceDistanceText() as String
			Get
				Return _raceDistance.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the RaceLocation
		' Location of the race
		' </summary>
        <XmlAttribute("RaceLocation")> _
		Public Property RaceLocation() as String 
			Get
				Return _raceLocation
			End Get
			Set(ByVal Value as String)
				_raceLocation = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the RaceCity
		' City where race starts
		' </summary>
        <XmlAttribute("RaceCity")> _
		Public Property RaceCity() as String 
			Get
				Return _raceCity
			End Get
			Set(ByVal Value as String)
				_raceCity = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the RaceState
		' State where race starts
		' </summary>
        <XmlAttribute("RaceState")> _
		Public Property RaceState() as String 
			Get
				Return _raceState
			End Get
			Set(ByVal Value as String)
				_raceState = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the RaceCountry
		' Country where race starts
		' </summary>
        <XmlAttribute("RaceCountry")> _
		Public Property RaceCountry() as String 
			Get
				Return _raceCountry
			End Get
			Set(ByVal Value as String)
				_raceCountry = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the RaceLogo
		' File path to race logo
		' </summary>
        <XmlAttribute("RaceLogo")> _
		Public Property RaceLogo() as String 
			Get
				Return _raceLogo
			End Get
			Set(ByVal Value as String)
				_raceLogo = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the USATFNumber
		' USATF Certificate Number
		' </summary>
        <XmlAttribute("USATFNumber")> _
		Public Property USATFNumber() as String 
			Get
				Return _uSATFNumber
			End Get
			Set(ByVal Value as String)
				_uSATFNumber = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the RodaleEventId
		' Rodale Event Id
		' </summary>
        <XmlAttribute("RodaleEventId")> _
		Public Property RodaleEventId() as Integer 
			Get
				Return _rodaleEventId
			End Get
			Set(ByVal Value as Integer)
				_rodaleEventId = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of RodaleEventId
		' Rodale Event Id
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property RodaleEventIdText() as String
			Get
				Return _rodaleEventId.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the ActiveEventId
		' Active.Com Event Id
		' </summary>
        <XmlAttribute("ActiveEventId")> _
		Public Property ActiveEventId() as Integer 
			Get
				Return _activeEventId
			End Get
			Set(ByVal Value as Integer)
				_activeEventId = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of ActiveEventId
		' Active.Com Event Id
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property ActiveEventIdText() as String
			Get
				Return _activeEventId.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the PreregistrationDate
		' The preregistration cutoff date
		' </summary>
        <XmlAttribute("PreregistrationDate")> _
		Public Property PreregistrationDate() as DateTime 
			Get
				Return _preregistrationDate
			End Get
			Set(ByVal Value as DateTime)
				_preregistrationDate = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of PreregistrationDate
		' The preregistration cutoff date
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property PreregistrationDateText() as String
			Get
				Return _preregistrationDate.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the PreregistrationFee
		' The preregistation race fee
		' </summary>
        <XmlAttribute("PreregistrationFee")> _
		Public Property PreregistrationFee() as decimal 
			Get
				Return _preregistrationFee
			End Get
			Set(ByVal Value as decimal)
				_preregistrationFee = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of PreregistrationFee
		' The preregistation race fee
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property PreregistrationFeeText() as String
			Get
				Return _preregistrationFee.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the RaceDayFee
		' The race fee after the preregistration cutoff
		' </summary>
        <XmlAttribute("RaceDayFee")> _
		Public Property RaceDayFee() as decimal 
			Get
				Return _raceDayFee
			End Get
			Set(ByVal Value as decimal)
				_raceDayFee = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of RaceDayFee
		' The race fee after the preregistration cutoff
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property RaceDayFeeText() as String
			Get
				Return _raceDayFee.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the RegistrationURL
		' URL for registration WEB site
		' </summary>
        <XmlAttribute("RegistrationURL")> _
		Public Property RegistrationURL() as String 
			Get
				Return _registrationURL
			End Get
			Set(ByVal Value as String)
				_registrationURL = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the RegistrationLogo
		' File path to registration company graphic
		' </summary>
        <XmlAttribute("RegistrationLogo")> _
		Public Property RegistrationLogo() as String 
			Get
				Return _registrationLogo
			End Get
			Set(ByVal Value as String)
				_registrationLogo = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the Description
		' A description of the race
		' </summary>
        <XmlAttribute("Description")> _
		Public Property Description() as String 
			Get
				Return _description
			End Get
			Set(ByVal Value as String)
				_description = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the EmailText
		' Text for promotional emails
		' </summary>
        <XmlAttribute("EmailText")> _
		Public Property EmailText() as String 
			Get
				Return _emailText
			End Get
			Set(ByVal Value as String)
				_emailText = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the ResultsText
		' Text for results emails
		' </summary>
        <XmlAttribute("ResultsText")> _
		Public Property ResultsText() as String 
			Get
				Return _resultsText
			End Get
			Set(ByVal Value as String)
				_resultsText = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the ResultsURL
		' URL for results WEB site
		' </summary>
        <XmlAttribute("ResultsURL")> _
		Public Property ResultsURL() as String 
			Get
				Return _resultsURL
			End Get
			Set(ByVal Value as String)
				_resultsURL = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the Annual
		' The nth annual
		' </summary>
        <XmlAttribute("Annual")> _
		Public Property Annual() as short 
			Get
				Return _annual
			End Get
			Set(ByVal Value as short)
				_annual = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of Annual
		' The nth annual
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property AnnualText() as String
			Get
				Return _annual.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the Keyword
		' A shorthand keyword identifying the race
		' </summary>
        <XmlAttribute("Keyword")> _
		Public Property Keyword() as String 
			Get
				Return _keyword
			End Get
			Set(ByVal Value as String)
				_keyword = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the LastBibNumber
		' The last Bib number assigned
		' </summary>
        <XmlAttribute("LastBibNumber")> _
		Public Property LastBibNumber() as double 
			Get
				Return _lastBibNumber
			End Get
			Set(ByVal Value as double)
				_lastBibNumber = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of LastBibNumber
		' The last Bib number assigned
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property LastBibNumberText() as String
			Get
				Return _lastBibNumber.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the ContactName
		' The race contact
		' </summary>
        <XmlAttribute("ContactName")> _
		Public Property ContactName() as String 
			Get
				Return _contactName
			End Get
			Set(ByVal Value as String)
				_contactName = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the ContactAddress1
		' The contact address
		' </summary>
        <XmlAttribute("ContactAddress1")> _
		Public Property ContactAddress1() as String 
			Get
				Return _contactAddress1
			End Get
			Set(ByVal Value as String)
				_contactAddress1 = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the ContactAddress2
		' </summary>
        <XmlAttribute("ContactAddress2")> _
		Public Property ContactAddress2() as String 
			Get
				Return _contactAddress2
			End Get
			Set(ByVal Value as String)
				_contactAddress2 = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the ContactCity
		' The contact city
		' </summary>
        <XmlAttribute("ContactCity")> _
		Public Property ContactCity() as String 
			Get
				Return _contactCity
			End Get
			Set(ByVal Value as String)
				_contactCity = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the ContactState
		' The contact state
		' </summary>
        <XmlAttribute("ContactState")> _
		Public Property ContactState() as String 
			Get
				Return _contactState
			End Get
			Set(ByVal Value as String)
				_contactState = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the ContactZIP
		' The contact ZIP Code
		' </summary>
        <XmlAttribute("ContactZIP")> _
		Public Property ContactZIP() as String 
			Get
				Return _contactZIP
			End Get
			Set(ByVal Value as String)
				_contactZIP = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the ContactPhoneNumber
		' The phone number for the race contact
		' </summary>
        <XmlAttribute("ContactPhoneNumber")> _
		Public Property ContactPhoneNumber() as String 
			Get
				Return _contactPhoneNumber
			End Get
			Set(ByVal Value as String)
				_contactPhoneNumber = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the ContactFAX
		' FAX Number for Contact
		' </summary>
        <XmlAttribute("ContactFAX")> _
		Public Property ContactFAX() as String 
			Get
				Return _contactFAX
			End Get
			Set(ByVal Value as String)
				_contactFAX = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the ContactEMail
		' Email address for Contact
		' </summary>
        <XmlAttribute("ContactEMail")> _
		Public Property ContactEMail() as String 
			Get
				Return _contactEMail
			End Get
			Set(ByVal Value as String)
				_contactEMail = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the WEBSite
		' URL for race WEB page
		' </summary>
        <XmlAttribute("WEBSite")> _
		Public Property WEBSite() as String 
			Get
				Return _wEBSite
			End Get
			Set(ByVal Value as String)
				_wEBSite = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the RelatedRace
		' Link to another related race the same day
		' </summary>
        <XmlAttribute("RelatedRace")> _
		Public Property RelatedRace() as Integer 
			Get
				Return _relatedRace
			End Get
			Set(ByVal Value as Integer)
				_relatedRace = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of RelatedRace
		' Link to another related race the same day
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property RelatedRaceText() as String
			Get
				Return _relatedRace.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the Organization
		' Organizing club
		' </summary>
        <XmlAttribute("Organization")> _
		Public Property Organization() as Integer 
			Get
				Return _organization
			End Get
			Set(ByVal Value as Integer)
				_organization = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of Organization
		' Organizing club
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property OrganizationText() as String
			Get
				Return _organization.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the VolunteerContact
		' Name of Volunteer Coodinator
		' </summary>
        <XmlAttribute("VolunteerContact")> _
		Public Property VolunteerContact() as String 
			Get
				Return _volunteerContact
			End Get
			Set(ByVal Value as String)
				_volunteerContact = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the VolunteerPhone
		' Volunteer coordinator phone number
		' </summary>
        <XmlAttribute("VolunteerPhone")> _
		Public Property VolunteerPhone() as String 
			Get
				Return _volunteerPhone
			End Get
			Set(ByVal Value as String)
				_volunteerPhone = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the VolunteerEmail
		' Volunteer coordinator email
		' </summary>
        <XmlAttribute("VolunteerEmail")> _
		Public Property VolunteerEmail() as String 
			Get
				Return _volunteerEmail
			End Get
			Set(ByVal Value as String)
				_volunteerEmail = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the DisplayStartDate
		' Date event starts displaying on web calendars
		' </summary>
        <XmlAttribute("DisplayStartDate")> _
		Public Property DisplayStartDate() as DateTime 
			Get
				Return _displayStartDate
			End Get
			Set(ByVal Value as DateTime)
				_displayStartDate = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of DisplayStartDate
		' Date event starts displaying on web calendars
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property DisplayStartDateText() as String
			Get
				Return _displayStartDate.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the DisplayEndDate
		' Date event stops displaying on web calendars
		' </summary>
        <XmlAttribute("DisplayEndDate")> _
		Public Property DisplayEndDate() as DateTime 
			Get
				Return _displayEndDate
			End Get
			Set(ByVal Value as DateTime)
				_displayEndDate = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of DisplayEndDate
		' Date event stops displaying on web calendars
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property DisplayEndDateText() as String
			Get
				Return _displayEndDate.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the InsertionDate
		' The date the record was inserted into the database
		' </summary>
        <XmlAttribute("InsertionDate")> _
		Public Property InsertionDate() as DateTime 
			Get
				Return _insertionDate
			End Get
			Set(ByVal Value as DateTime)
				_insertionDate = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of InsertionDate
		' The date the record was inserted into the database
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property InsertionDateText() as String
			Get
				Return _insertionDate.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the ModificationDate
		' The date the record was last modified
		' </summary>
        <XmlAttribute("ModificationDate")> _
		Public Property ModificationDate() as DateTime 
			Get
				Return _modificationDate
			End Get
			Set(ByVal Value as DateTime)
				_modificationDate = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of ModificationDate
		' The date the record was last modified
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property ModificationDateText() as String
			Get
				Return _modificationDate.ToString()
			End Get
		End Property
#End Region

#Region "IHydratable Implementation"
       <XmlIgnore()> _
       Public Property KeyID() As Integer Implements Entities.Modules.IHydratable.KeyID
            Get
		       Return RaceId 
            End Get
            Set(ByVal value As Integer)
		       RaceId = value
		       End Set
        End Property
 
        Public Sub Fill(ByVal dr As IDataReader) Implements Entities.Modules.IHydratable.Fill
  
		       RaceId = Convert.ToInt32(Null.SetNull(dr.Item("RaceId"), RaceId))
		       PortalId = Convert.ToInt32(Null.SetNull(dr.Item("PortalId"), PortalId))
		       EventType = Convert.ToInt32(Null.SetNull(dr.Item("EventType"), EventType))
		       RaceName = Convert.ToString(Null.SetNull(dr.Item("RaceName"), RaceName))
		       RaceDate = Convert.ToDateTime(Null.SetNull(dr.Item("RaceDate"), RaceDate))
		       RaceDistance = Convert.ToSingle(Null.SetNull(dr.Item("RaceDistance"), RaceDistance))
		       RaceLocation = Convert.ToString(Null.SetNull(dr.Item("RaceLocation"), RaceLocation))
		       RaceCity = Convert.ToString(Null.SetNull(dr.Item("RaceCity"), RaceCity))
		       RaceState = Convert.ToString(Null.SetNull(dr.Item("RaceState"), RaceState))
		       RaceCountry = Convert.ToString(Null.SetNull(dr.Item("RaceCountry"), RaceCountry))
		       RaceLogo = Convert.ToString(Null.SetNull(dr.Item("RaceLogo"), RaceLogo))
		       USATFNumber = Convert.ToString(Null.SetNull(dr.Item("USATFNumber"), USATFNumber))
		       RodaleEventId = Convert.ToInt32(Null.SetNull(dr.Item("RodaleEventId"), RodaleEventId))
		       ActiveEventId = Convert.ToInt32(Null.SetNull(dr.Item("ActiveEventId"), ActiveEventId))
		       PreregistrationDate = Convert.ToDateTime(Null.SetNull(dr.Item("PreregistrationDate"), PreregistrationDate))
		       PreregistrationFee = Convert.ToDecimal(Null.SetNull(dr.Item("PreregistrationFee"), PreregistrationFee))
		       RaceDayFee = Convert.ToDecimal(Null.SetNull(dr.Item("RaceDayFee"), RaceDayFee))
		       RegistrationURL = Convert.ToString(Null.SetNull(dr.Item("RegistrationURL"), RegistrationURL))
		       RegistrationLogo = Convert.ToString(Null.SetNull(dr.Item("RegistrationLogo"), RegistrationLogo))
		       Description = Convert.ToString(Null.SetNull(dr.Item("Description"), Description))
		       EmailText = Convert.ToString(Null.SetNull(dr.Item("EmailText"), EmailText))
		       ResultsText = Convert.ToString(Null.SetNull(dr.Item("ResultsText"), ResultsText))
		       ResultsURL = Convert.ToString(Null.SetNull(dr.Item("ResultsURL"), ResultsURL))
		       Annual = Convert.ToInt16(Null.SetNull(dr.Item("Annual"), Annual))
		       Keyword = Convert.ToString(Null.SetNull(dr.Item("Keyword"), Keyword))
		       LastBibNumber = Convert.ToDouble(Null.SetNull(dr.Item("LastBibNumber"), LastBibNumber))
		       ContactName = Convert.ToString(Null.SetNull(dr.Item("ContactName"), ContactName))
		       ContactAddress1 = Convert.ToString(Null.SetNull(dr.Item("ContactAddress1"), ContactAddress1))
		       ContactAddress2 = Convert.ToString(Null.SetNull(dr.Item("ContactAddress2"), ContactAddress2))
		       ContactCity = Convert.ToString(Null.SetNull(dr.Item("ContactCity"), ContactCity))
		       ContactState = Convert.ToString(Null.SetNull(dr.Item("ContactState"), ContactState))
		       ContactZIP = Convert.ToString(Null.SetNull(dr.Item("ContactZIP"), ContactZIP))
		       ContactPhoneNumber = Convert.ToString(Null.SetNull(dr.Item("ContactPhoneNumber"), ContactPhoneNumber))
		       ContactFAX = Convert.ToString(Null.SetNull(dr.Item("ContactFAX"), ContactFAX))
		       ContactEMail = Convert.ToString(Null.SetNull(dr.Item("ContactEMail"), ContactEMail))
		       WEBSite = Convert.ToString(Null.SetNull(dr.Item("WEBSite"), WEBSite))
		       RelatedRace = Convert.ToInt32(Null.SetNull(dr.Item("RelatedRace"), RelatedRace))
		       Organization = Convert.ToInt32(Null.SetNull(dr.Item("Organization"), Organization))
		       VolunteerContact = Convert.ToString(Null.SetNull(dr.Item("VolunteerContact"), VolunteerContact))
		       VolunteerPhone = Convert.ToString(Null.SetNull(dr.Item("VolunteerPhone"), VolunteerPhone))
		       VolunteerEmail = Convert.ToString(Null.SetNull(dr.Item("VolunteerEmail"), VolunteerEmail))
		       DisplayStartDate = Convert.ToDateTime(Null.SetNull(dr.Item("DisplayStartDate"), DisplayStartDate))
		       DisplayEndDate = Convert.ToDateTime(Null.SetNull(dr.Item("DisplayEndDate"), DisplayEndDate))
		       InsertionDate = Convert.ToDateTime(Null.SetNull(dr.Item("InsertionDate"), InsertionDate))
		       ModificationDate = Convert.ToDateTime(Null.SetNull(dr.Item("ModificationDate"), ModificationDate))
		End Sub
#End Region
    End Class

End Namespace
