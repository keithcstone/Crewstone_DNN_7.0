Option Explicit On
'
' Copyright (c) 2014 Crewstone Consulting ltd
'  All rights reserved.
' 
' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED
' TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
' THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
' CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
' DEALINGS IN THE SOFTWARE.
'
Imports System
Imports System.Configuration
Imports System.Data
Imports System.Xml.Serialization
Imports DotNetNuke
Imports DotNetNuke.Common.Utilities

Namespace Namespace.Modules.Race2012

    ''' <summary>
    ''' The Info class for Events
    ''' </summary>
    ''' <remarks>
    ''' </remarks>
    ''' <history>
	''' Generated by CodeSmith on Friday, January 17, 2014
    ''' </history>
    ''' -----------------------------------------------------------------------------
    <Serializable(), XmlRoot("Events")> _
	Public Class EventsInfo

#Region "Private Members"
		Private _runnerId as Integer
		Private _raceId as Integer
		Private _portalId as Integer
		Private _bibNumber as Integer
		Private _division as String = string.Empty
		Private _divisionPlace as short
		Private _divisionTotal as short
		Private _sexPlace as Integer
		Private _sexTotal as Integer
		Private _gunTime as DateTime
		Private _netTime as DateTime
		Private _pace as DateTime
		Private _place as Integer
		Private _seed as DateTime
		Private _team as String = string.Empty
		Private _fee as decimal
		Private _entryDate as DateTime
		Private _clydesdale as Boolean
		Private _survivor as Boolean
		Private _nonCompetitive as Boolean
		Private _uSATF as Boolean
		Private _age as short
		Private _sex as String = string.Empty
		Private _weight as short
		Private _heat as short
		Private _waveOffset as DateTime
		Private _wAVATime as DateTime
		Private _performancePercent as Single
		Private _seriesPlace as short
		Private _seriesAge as short
		Private _seriesDivision as String = string.Empty
		Private _seriesPoints as short
		Private _confirmation as Boolean
		Private _results as Boolean
		Private _chipId as String = string.Empty
		Private _awardDivision as String = string.Empty
		Private _awardPlace as short
		Private _awardPriority as short
#End Region

#Region "Constructors"
        ' initialization
        Public Sub New()
        End Sub
		
        Public Sub New(ByVal runnerId As Integer, ByVal raceId As Integer, ByVal portalId As Integer, ByVal bibNumber As Integer, ByVal division As String, ByVal divisionPlace As short, ByVal divisionTotal As short, ByVal sexPlace As Integer, ByVal sexTotal As Integer, ByVal gunTime As DateTime, ByVal netTime As DateTime, ByVal pace As DateTime, ByVal place As Integer, ByVal seed As DateTime, ByVal team As String, ByVal fee As decimal, ByVal entryDate As DateTime, ByVal clydesdale As Boolean, ByVal survivor As Boolean, ByVal nonCompetitive As Boolean, ByVal uSATF As Boolean, ByVal age As short, ByVal sex As String, ByVal weight As short, ByVal heat As short, ByVal waveOffset As DateTime, ByVal wAVATime As DateTime, ByVal performancePercent As Single, ByVal seriesPlace As short, ByVal seriesAge As short, ByVal seriesDivision As String, ByVal seriesPoints As short, ByVal confirmation As Boolean, ByVal results As Boolean, ByVal chipId As String, ByVal awardDivision As String, ByVal awardPlace As short, ByVal awardPriority As short)
            Me.PortalId = PortalId
            Me.RunnerId = RunnerId
            Me.RaceId = RaceId
            Me.BibNumber = BibNumber
            Me.Division = Division
            Me.DivisionPlace = DivisionPlace
            Me.DivisionTotal = DivisionTotal
            Me.SexPlace = SexPlace
            Me.SexTotal = SexTotal
            Me.GunTime = GunTime
            Me.NetTime = NetTime
            Me.Pace = Pace
            Me.Place = Place
            Me.Seed = Seed
            Me.Team = Team
            Me.Fee = Fee
            Me.EntryDate = EntryDate
            Me.Clydesdale = Clydesdale
            Me.Survivor = Survivor
            Me.NonCompetitive = NonCompetitive
            Me.USATF = USATF
            Me.Age = Age
            Me.Sex = Sex
            Me.Weight = Weight
            Me.Heat = Heat
            Me.WaveOffset = WaveOffset
            Me.WAVATime = WAVATime
            Me.PerformancePercent = PerformancePercent
            Me.SeriesPlace = SeriesPlace
            Me.SeriesAge = SeriesAge
            Me.SeriesDivision = SeriesDivision
            Me.SeriesPoints = SeriesPoints
            Me.Confirmation = Confirmation
            Me.Results = Results
            Me.ChipId = ChipId
            Me.AwardDivision = AwardDivision
            Me.AwardPlace = AwardPlace
            Me.AwardPriority = AwardPriority
        End Sub
#End Region

#Region "Public Properties"
		' <summary>
		' Gets and sets the RunnerId
		' </summary>
        <XmlIgnore()> _
		Public Property RunnerId() as Integer
			Get
				Return _runnerId
			End Get
			Set(ByVal Value as Integer)
				_runnerId = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the RaceId
		' </summary>
        <XmlIgnore()> _
		Public Property RaceId() as Integer
			Get
				Return _raceId
			End Get
			Set(ByVal Value as Integer)
				_raceId = Value
			End Set
		End Property
		
		' <summary>
		' Gets and sets the PortalId
		' </summary>
        <XmlIgnore()> _
        <XmlAttribute("PortalId")> _
		Public Property PortalId() as Integer 
			Get
				Return _portalId
			End Get
			Set(ByVal Value as Integer)
				_portalId = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of PortalId
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property PortalIdText() as String
			Get
				Return _portalId.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the BibNumber
		' </summary>
        <XmlAttribute("BibNumber")> _
		Public Property BibNumber() as Integer 
			Get
				Return _bibNumber
			End Get
			Set(ByVal Value as Integer)
				_bibNumber = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of BibNumber
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property BibNumberText() as String
			Get
				Return _bibNumber.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the Division
		' </summary>
        <XmlAttribute("Division")> _
		Public Property Division() as String 
			Get
				Return _division
			End Get
			Set(ByVal Value as String)
				_division = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the DivisionPlace
		' </summary>
        <XmlAttribute("DivisionPlace")> _
		Public Property DivisionPlace() as short 
			Get
				Return _divisionPlace
			End Get
			Set(ByVal Value as short)
				_divisionPlace = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of DivisionPlace
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property DivisionPlaceText() as String
			Get
				Return _divisionPlace.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the DivisionTotal
		' </summary>
        <XmlAttribute("DivisionTotal")> _
		Public Property DivisionTotal() as short 
			Get
				Return _divisionTotal
			End Get
			Set(ByVal Value as short)
				_divisionTotal = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of DivisionTotal
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property DivisionTotalText() as String
			Get
				Return _divisionTotal.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the SexPlace
		' </summary>
        <XmlAttribute("SexPlace")> _
		Public Property SexPlace() as Integer 
			Get
				Return _sexPlace
			End Get
			Set(ByVal Value as Integer)
				_sexPlace = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of SexPlace
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property SexPlaceText() as String
			Get
				Return _sexPlace.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the SexTotal
		' </summary>
        <XmlAttribute("SexTotal")> _
		Public Property SexTotal() as Integer 
			Get
				Return _sexTotal
			End Get
			Set(ByVal Value as Integer)
				_sexTotal = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of SexTotal
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property SexTotalText() as String
			Get
				Return _sexTotal.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the GunTime
		' </summary>
        <XmlAttribute("GunTime")> _
		Public Property GunTime() as DateTime 
			Get
				Return _gunTime
			End Get
			Set(ByVal Value as DateTime)
				_gunTime = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of GunTime
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property GunTimeText() as String
			Get
				Return _gunTime.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the NetTime
		' </summary>
        <XmlAttribute("NetTime")> _
		Public Property NetTime() as DateTime 
			Get
				Return _netTime
			End Get
			Set(ByVal Value as DateTime)
				_netTime = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of NetTime
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property NetTimeText() as String
			Get
				Return _netTime.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the Pace
		' </summary>
        <XmlAttribute("Pace")> _
		Public Property Pace() as DateTime 
			Get
				Return _pace
			End Get
			Set(ByVal Value as DateTime)
				_pace = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of Pace
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property PaceText() as String
			Get
				Return _pace.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the Place
		' </summary>
        <XmlAttribute("Place")> _
		Public Property Place() as Integer 
			Get
				Return _place
			End Get
			Set(ByVal Value as Integer)
				_place = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of Place
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property PlaceText() as String
			Get
				Return _place.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the Seed
		' </summary>
        <XmlAttribute("Seed")> _
		Public Property Seed() as DateTime 
			Get
				Return _seed
			End Get
			Set(ByVal Value as DateTime)
				_seed = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of Seed
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property SeedText() as String
			Get
				Return _seed.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the Team
		' </summary>
        <XmlAttribute("Team")> _
		Public Property Team() as String 
			Get
				Return _team
			End Get
			Set(ByVal Value as String)
				_team = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the Fee
		' </summary>
        <XmlAttribute("Fee")> _
		Public Property Fee() as decimal 
			Get
				Return _fee
			End Get
			Set(ByVal Value as decimal)
				_fee = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of Fee
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property FeeText() as String
			Get
				Return _fee.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the EntryDate
		' </summary>
        <XmlAttribute("EntryDate")> _
		Public Property EntryDate() as DateTime 
			Get
				Return _entryDate
			End Get
			Set(ByVal Value as DateTime)
				_entryDate = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of EntryDate
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property EntryDateText() as String
			Get
				Return _entryDate.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the Clydesdale
		' </summary>
        <XmlAttribute("Clydesdale")> _
		Public Property Clydesdale() as Boolean 
			Get
				Return _clydesdale
			End Get
			Set(ByVal Value as Boolean)
				_clydesdale = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of Clydesdale
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property ClydesdaleText() as String
			Get
				Return _clydesdale.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the Survivor
		' </summary>
        <XmlAttribute("Survivor")> _
		Public Property Survivor() as Boolean 
			Get
				Return _survivor
			End Get
			Set(ByVal Value as Boolean)
				_survivor = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of Survivor
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property SurvivorText() as String
			Get
				Return _survivor.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the NonCompetitive
		' </summary>
        <XmlAttribute("NonCompetitive")> _
		Public Property NonCompetitive() as Boolean 
			Get
				Return _nonCompetitive
			End Get
			Set(ByVal Value as Boolean)
				_nonCompetitive = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of NonCompetitive
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property NonCompetitiveText() as String
			Get
				Return _nonCompetitive.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the USATF
		' </summary>
        <XmlAttribute("USATF")> _
		Public Property USATF() as Boolean 
			Get
				Return _uSATF
			End Get
			Set(ByVal Value as Boolean)
				_uSATF = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of USATF
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property USATFText() as String
			Get
				Return _uSATF.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the Age
		' </summary>
        <XmlAttribute("Age")> _
		Public Property Age() as short 
			Get
				Return _age
			End Get
			Set(ByVal Value as short)
				_age = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of Age
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property AgeText() as String
			Get
				Return _age.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the Sex
		' </summary>
        <XmlAttribute("Sex")> _
		Public Property Sex() as String 
			Get
				Return _sex
			End Get
			Set(ByVal Value as String)
				_sex = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the Weight
		' </summary>
        <XmlAttribute("Weight")> _
		Public Property Weight() as short 
			Get
				Return _weight
			End Get
			Set(ByVal Value as short)
				_weight = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of Weight
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property WeightText() as String
			Get
				Return _weight.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the Heat
		' </summary>
        <XmlAttribute("Heat")> _
		Public Property Heat() as short 
			Get
				Return _heat
			End Get
			Set(ByVal Value as short)
				_heat = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of Heat
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property HeatText() as String
			Get
				Return _heat.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the WaveOffset
		' </summary>
        <XmlAttribute("WaveOffset")> _
		Public Property WaveOffset() as DateTime 
			Get
				Return _waveOffset
			End Get
			Set(ByVal Value as DateTime)
				_waveOffset = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of WaveOffset
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property WaveOffsetText() as String
			Get
				Return _waveOffset.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the WAVATime
		' </summary>
        <XmlAttribute("WAVATime")> _
		Public Property WAVATime() as DateTime 
			Get
				Return _wAVATime
			End Get
			Set(ByVal Value as DateTime)
				_wAVATime = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of WAVATime
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property WAVATimeText() as String
			Get
				Return _wAVATime.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the PerformancePercent
		' </summary>
        <XmlAttribute("PerformancePercent")> _
		Public Property PerformancePercent() as Single 
			Get
				Return _performancePercent
			End Get
			Set(ByVal Value as Single)
				_performancePercent = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of PerformancePercent
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property PerformancePercentText() as String
			Get
				Return _performancePercent.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the SeriesPlace
		' </summary>
        <XmlAttribute("SeriesPlace")> _
		Public Property SeriesPlace() as short 
			Get
				Return _seriesPlace
			End Get
			Set(ByVal Value as short)
				_seriesPlace = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of SeriesPlace
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property SeriesPlaceText() as String
			Get
				Return _seriesPlace.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the SeriesAge
		' </summary>
        <XmlAttribute("SeriesAge")> _
		Public Property SeriesAge() as short 
			Get
				Return _seriesAge
			End Get
			Set(ByVal Value as short)
				_seriesAge = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of SeriesAge
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property SeriesAgeText() as String
			Get
				Return _seriesAge.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the SeriesDivision
		' </summary>
        <XmlAttribute("SeriesDivision")> _
		Public Property SeriesDivision() as String 
			Get
				Return _seriesDivision
			End Get
			Set(ByVal Value as String)
				_seriesDivision = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the SeriesPoints
		' </summary>
        <XmlAttribute("SeriesPoints")> _
		Public Property SeriesPoints() as short 
			Get
				Return _seriesPoints
			End Get
			Set(ByVal Value as short)
				_seriesPoints = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of SeriesPoints
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property SeriesPointsText() as String
			Get
				Return _seriesPoints.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the Confirmation
		' </summary>
        <XmlAttribute("Confirmation")> _
		Public Property Confirmation() as Boolean 
			Get
				Return _confirmation
			End Get
			Set(ByVal Value as Boolean)
				_confirmation = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of Confirmation
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property ConfirmationText() as String
			Get
				Return _confirmation.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the Results
		' </summary>
        <XmlAttribute("Results")> _
		Public Property Results() as Boolean 
			Get
				Return _results
			End Get
			Set(ByVal Value as Boolean)
				_results = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of Results
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property ResultsText() as String
			Get
				Return _results.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the ChipId
		' </summary>
        <XmlAttribute("ChipId")> _
		Public Property ChipId() as String 
			Get
				Return _chipId
			End Get
			Set(ByVal Value as String)
				_chipId = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the AwardDivision
		' </summary>
        <XmlAttribute("AwardDivision")> _
		Public Property AwardDivision() as String 
			Get
				Return _awardDivision
			End Get
			Set(ByVal Value as String)
				_awardDivision = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the AwardPlace
		' </summary>
        <XmlAttribute("AwardPlace")> _
		Public Property AwardPlace() as short 
			Get
				Return _awardPlace
			End Get
			Set(ByVal Value as short)
				_awardPlace = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of AwardPlace
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property AwardPlaceText() as String
			Get
				Return _awardPlace.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the AwardPriority
		' </summary>
        <XmlAttribute("AwardPriority")> _
		Public Property AwardPriority() as short 
			Get
				Return _awardPriority
			End Get
			Set(ByVal Value as short)
				_awardPriority = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of AwardPriority
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property AwardPriorityText() as String
			Get
				Return _awardPriority.ToString()
			End Get
		End Property
#End Region

#Region "IHydratable Implementation"
#End Region
    End Class

End Namespace
