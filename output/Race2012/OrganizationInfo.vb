Option Explicit On
'
' Copyright (c) 2014 Crewstone Consulting ltd
'  All rights reserved.
' 
' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED
' TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
' THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
' CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
' DEALINGS IN THE SOFTWARE.
'
Imports System
Imports System.Configuration
Imports System.Data
Imports System.Xml.Serialization
Imports DotNetNuke
Imports DotNetNuke.Common.Utilities

Namespace Namespace.Modules.Race2012

    ''' <summary>
    ''' The Info class for Organization
    ''' </summary>
    ''' <remarks>
    ''' </remarks>
    ''' <history>
	''' Generated by CodeSmith on Friday, January 17, 2014
    ''' </history>
    ''' -----------------------------------------------------------------------------
    <Serializable(), XmlRoot("Organization")> _
	Public Class OrganizationInfo
		Implements Entities.Modules.IHydratable

#Region "Private Members"
		Private _orgID as Integer
		Private _portalId as Integer
		Private _clubName as String = string.Empty
		Private _address as String = string.Empty
		Private _city as String = string.Empty
		Private _stateOrProvince as String = string.Empty
		Private _postalCode as String = string.Empty
		Private _country as String = string.Empty
		Private _defaultInvoiceDescription as String = string.Empty
		Private _phoneNumber as String = string.Empty
		Private _faxNumber as String = string.Empty
		Private _eMail as String = string.Empty
		Private _nickname as String = string.Empty
		Private _mailingExpirePeriod as short
		Private _lastEmail as DateTime
		Private _lastLetters as DateTime
#End Region

#Region "Constructors"
        ' initialization
        Public Sub New()
        End Sub
		
        Public Sub New(ByVal orgID As Integer, ByVal portalId As Integer, ByVal clubName As String, ByVal address As String, ByVal city As String, ByVal stateOrProvince As String, ByVal postalCode As String, ByVal country As String, ByVal defaultInvoiceDescription As String, ByVal phoneNumber As String, ByVal faxNumber As String, ByVal eMail As String, ByVal nickname As String, ByVal mailingExpirePeriod As short, ByVal lastEmail As DateTime, ByVal lastLetters As DateTime)
            Me.PortalId = PortalId
            Me.OrgID = OrgID
            Me.ClubName = ClubName
            Me.Address = Address
            Me.City = City
            Me.StateOrProvince = StateOrProvince
            Me.PostalCode = PostalCode
            Me.Country = Country
            Me.DefaultInvoiceDescription = DefaultInvoiceDescription
            Me.PhoneNumber = PhoneNumber
            Me.FaxNumber = FaxNumber
            Me.EMail = EMail
            Me.Nickname = Nickname
            Me.MailingExpirePeriod = MailingExpirePeriod
            Me.LastEmail = LastEmail
            Me.LastLetters = LastLetters
        End Sub
#End Region

#Region "Public Properties"
		' <summary>
		' Gets and sets the OrgID
		' </summary>
        <XmlIgnore()> _
		Public Property OrgID() as Integer
			Get
				Return _orgID
			End Get
			Set(ByVal Value as Integer)
				_orgID = Value
			End Set
		End Property
		
		' <summary>
		' Gets and sets the PortalId
		' </summary>
        <XmlIgnore()> _
        <XmlAttribute("PortalId")> _
		Public Property PortalId() as Integer 
			Get
				Return _portalId
			End Get
			Set(ByVal Value as Integer)
				_portalId = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of PortalId
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property PortalIdText() as String
			Get
				Return _portalId.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the ClubName
		' Full Name of Club
		' </summary>
        <XmlAttribute("ClubName")> _
		Public Property ClubName() as String 
			Get
				Return _clubName
			End Get
			Set(ByVal Value as String)
				_clubName = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the Address
		' Club's Mailing Address
		' </summary>
        <XmlAttribute("Address")> _
		Public Property Address() as String 
			Get
				Return _address
			End Get
			Set(ByVal Value as String)
				_address = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the City
		' Club's Mailing City
		' </summary>
        <XmlAttribute("City")> _
		Public Property City() as String 
			Get
				Return _city
			End Get
			Set(ByVal Value as String)
				_city = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the StateOrProvince
		' Club's Mailing State or Province
		' </summary>
        <XmlAttribute("StateOrProvince")> _
		Public Property StateOrProvince() as String 
			Get
				Return _stateOrProvince
			End Get
			Set(ByVal Value as String)
				_stateOrProvince = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the PostalCode
		' Club's Postal Code
		' </summary>
        <XmlAttribute("PostalCode")> _
		Public Property PostalCode() as String 
			Get
				Return _postalCode
			End Get
			Set(ByVal Value as String)
				_postalCode = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the Country
		' Club's County
		' </summary>
        <XmlAttribute("Country")> _
		Public Property Country() as String 
			Get
				Return _country
			End Get
			Set(ByVal Value as String)
				_country = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the DefaultInvoiceDescription
		' Default Invoice Description
		' </summary>
        <XmlAttribute("DefaultInvoiceDescription")> _
		Public Property DefaultInvoiceDescription() as String 
			Get
				Return _defaultInvoiceDescription
			End Get
			Set(ByVal Value as String)
				_defaultInvoiceDescription = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the PhoneNumber
		' Club's Phone Number
		' </summary>
        <XmlAttribute("PhoneNumber")> _
		Public Property PhoneNumber() as String 
			Get
				Return _phoneNumber
			End Get
			Set(ByVal Value as String)
				_phoneNumber = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the FaxNumber
		' Club's FAX Number
		' </summary>
        <XmlAttribute("FaxNumber")> _
		Public Property FaxNumber() as String 
			Get
				Return _faxNumber
			End Get
			Set(ByVal Value as String)
				_faxNumber = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the EMail
		' Club's Email Address
		' </summary>
        <XmlAttribute("EMail")> _
		Public Property EMail() as String 
			Get
				Return _eMail
			End Get
			Set(ByVal Value as String)
				_eMail = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the Nickname
		' Club's nickname or abbreviation
		' </summary>
        <XmlAttribute("Nickname")> _
		Public Property Nickname() as String 
			Get
				Return _nickname
			End Get
			Set(ByVal Value as String)
				_nickname = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the MailingExpirePeriod
		' Amount of time after membership lapses that mailings will continue
		' </summary>
        <XmlAttribute("MailingExpirePeriod")> _
		Public Property MailingExpirePeriod() as short 
			Get
				Return _mailingExpirePeriod
			End Get
			Set(ByVal Value as short)
				_mailingExpirePeriod = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of MailingExpirePeriod
		' Amount of time after membership lapses that mailings will continue
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property MailingExpirePeriodText() as String
			Get
				Return _mailingExpirePeriod.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the LastEmail
		' Date of last bulk email to Club members
		' </summary>
        <XmlAttribute("LastEmail")> _
		Public Property LastEmail() as DateTime 
			Get
				Return _lastEmail
			End Get
			Set(ByVal Value as DateTime)
				_lastEmail = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of LastEmail
		' Date of last bulk email to Club members
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property LastEmailText() as String
			Get
				Return _lastEmail.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the LastLetters
		' Date of last renewal/New member letters
		' </summary>
        <XmlAttribute("LastLetters")> _
		Public Property LastLetters() as DateTime 
			Get
				Return _lastLetters
			End Get
			Set(ByVal Value as DateTime)
				_lastLetters = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of LastLetters
		' Date of last renewal/New member letters
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property LastLettersText() as String
			Get
				Return _lastLetters.ToString()
			End Get
		End Property
#End Region

#Region "IHydratable Implementation"
       <XmlIgnore()> _
       Public Property KeyID() As Integer Implements Entities.Modules.IHydratable.KeyID
            Get
		       Return OrgID 
            End Get
            Set(ByVal value As Integer)
		       OrgID = value
		       End Set
        End Property
 
        Public Sub Fill(ByVal dr As IDataReader) Implements Entities.Modules.IHydratable.Fill
  
		       OrgID = Convert.ToInt32(Null.SetNull(dr.Item("OrgID"), OrgID))
		       PortalId = Convert.ToInt32(Null.SetNull(dr.Item("PortalId"), PortalId))
		       ClubName = Convert.ToString(Null.SetNull(dr.Item("ClubName"), ClubName))
		       Address = Convert.ToString(Null.SetNull(dr.Item("Address"), Address))
		       City = Convert.ToString(Null.SetNull(dr.Item("City"), City))
		       StateOrProvince = Convert.ToString(Null.SetNull(dr.Item("StateOrProvince"), StateOrProvince))
		       PostalCode = Convert.ToString(Null.SetNull(dr.Item("PostalCode"), PostalCode))
		       Country = Convert.ToString(Null.SetNull(dr.Item("Country"), Country))
		       DefaultInvoiceDescription = Convert.ToString(Null.SetNull(dr.Item("DefaultInvoiceDescription"), DefaultInvoiceDescription))
		       PhoneNumber = Convert.ToString(Null.SetNull(dr.Item("PhoneNumber"), PhoneNumber))
		       FaxNumber = Convert.ToString(Null.SetNull(dr.Item("FaxNumber"), FaxNumber))
		       EMail = Convert.ToString(Null.SetNull(dr.Item("EMail"), EMail))
		       Nickname = Convert.ToString(Null.SetNull(dr.Item("Nickname"), Nickname))
		       MailingExpirePeriod = Convert.ToInt16(Null.SetNull(dr.Item("MailingExpirePeriod"), MailingExpirePeriod))
		       LastEmail = Convert.ToDateTime(Null.SetNull(dr.Item("LastEmail"), LastEmail))
		       LastLetters = Convert.ToDateTime(Null.SetNull(dr.Item("LastLetters"), LastLetters))
		End Sub
#End Region
    End Class

End Namespace
