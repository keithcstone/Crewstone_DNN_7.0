Option Explicit On
'
' Copyright (c) 2014 Crewstone Consulting ltd
'  All rights reserved.
' 
' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED
' TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
' THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
' CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
' DEALINGS IN THE SOFTWARE.
'
Imports System
Imports System.Configuration
Imports System.Data
Imports System.Xml.Serialization
Imports DotNetNuke
Imports DotNetNuke.Common.Utilities

Namespace Namespace.Modules.Race2012

    ''' <summary>
    ''' The Info class for Divisions
    ''' </summary>
    ''' <remarks>
    ''' </remarks>
    ''' <history>
	''' Generated by CodeSmith on Friday, January 17, 2014
    ''' </history>
    ''' -----------------------------------------------------------------------------
    <Serializable(), XmlRoot("Divisions")> _
	Public Class DivisionsInfo
		Implements Entities.Modules.IHydratable

#Region "Private Members"
		Private _division as String = string.Empty
		Private _portalId as Integer
		Private _description as String = string.Empty
		Private _priority as Integer
		Private _overall as Boolean
		Private _masters as Boolean
#End Region

#Region "Constructors"
        ' initialization
        Public Sub New()
        End Sub
		
        Public Sub New(ByVal division As String, ByVal portalId As Integer, ByVal description As String, ByVal priority As Integer, ByVal overall As Boolean, ByVal masters As Boolean)
            Me.PortalId = PortalId
            Me.Division = Division
            Me.Description = Description
            Me.Priority = Priority
            Me.Overall = Overall
            Me.Masters = Masters
        End Sub
#End Region

#Region "Public Properties"
		' <summary>
		' Gets and sets the Division
		' Code
		' </summary>
        <XmlIgnore()> _
		Public Property Division() as String
			Get
				Return _division
			End Get
			Set(ByVal Value as String)
				_division = Value
			End Set
		End Property
		
		' <summary>
		' Gets and sets the PortalId
		' </summary>
        <XmlIgnore()> _
        <XmlAttribute("PortalId")> _
		Public Property PortalId() as Integer 
			Get
				Return _portalId
			End Get
			Set(ByVal Value as Integer)
				_portalId = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of PortalId
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property PortalIdText() as String
			Get
				Return _portalId.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the Description
		' Description
		' </summary>
        <XmlAttribute("Description")> _
		Public Property Description() as String 
			Get
				Return _description
			End Get
			Set(ByVal Value as String)
				_description = Value
			End Set
		End Property

		' <summary>
		' Gets and sets the Priority
		' Default Priority
		' </summary>
        <XmlAttribute("Priority")> _
		Public Property Priority() as Integer 
			Get
				Return _priority
			End Get
			Set(ByVal Value as Integer)
				_priority = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of Priority
		' Default Priority
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property PriorityText() as String
			Get
				Return _priority.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the Overall
		' Open or Overall category
		' </summary>
        <XmlAttribute("Overall")> _
		Public Property Overall() as Boolean 
			Get
				Return _overall
			End Get
			Set(ByVal Value as Boolean)
				_overall = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of Overall
		' Open or Overall category
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property OverallText() as String
			Get
				Return _overall.ToString()
			End Get
		End Property

		' <summary>
		' Gets and sets the Masters
		' Masters Category
		' </summary>
        <XmlAttribute("Masters")> _
		Public Property Masters() as Boolean 
			Get
				Return _masters
			End Get
			Set(ByVal Value as Boolean)
				_masters = Value
			End Set
		End Property
		' <summary>
		' Read-only formatted text version of Masters
		' Masters Category
		' </summary>
        <XmlIgnore()> _
		Public Readonly Property MastersText() as String
			Get
				Return _masters.ToString()
			End Get
		End Property
#End Region

#Region "IHydratable Implementation"
       <XmlIgnore()> _
       Public Property KeyID() As Integer Implements Entities.Modules.IHydratable.KeyID
            Get
		       Return Division 
            End Get
            Set(ByVal value As Integer)
		       Division = value
		       End Set
        End Property
 
        Public Sub Fill(ByVal dr As IDataReader) Implements Entities.Modules.IHydratable.Fill
  
		       Division = Convert.ToString(Null.SetNull(dr.Item("Division"), Division))
		       PortalId = Convert.ToInt32(Null.SetNull(dr.Item("PortalId"), PortalId))
		       Description = Convert.ToString(Null.SetNull(dr.Item("Description"), Description))
		       Priority = Convert.ToInt32(Null.SetNull(dr.Item("Priority"), Priority))
		       Overall = Convert.ToBoolean(Null.SetNull(dr.Item("Overall"), Overall))
		       Masters = Convert.ToBoolean(Null.SetNull(dr.Item("Masters"), Masters))
		End Sub
#End Region
    End Class

End Namespace
