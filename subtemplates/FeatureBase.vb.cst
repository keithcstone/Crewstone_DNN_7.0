<%-- 
Name: ModuleBase.vb.cst
Author: Keith Stone
Description: Generates the DNN Feature Base Class for VB.Net
Revision: 2014.04.11
Note: For the latest version of this template, http://www.crewstone.com		
--%>

<%@ CodeTemplate Language="C#" Src="DNNMaster.CodeBehind.cs" Inherits="_Main" TargetLanguage="VB" Description="Generates the DNN Module Info class." Debug="True" %>
<%@ Property Category="DataSource" Name="MultiSourceTable" Type="SchemaExplorer.TableSchemaCollection" Description="Table that the object is based on." %>
<%@ Property Category="DataSource" Name="ObjectQualifier" Type="System.String" Default="" Optional="True" Description="Prefix for objects to be generated." %>
<%@ Property Category="Naming Convention" Name="Namespace" Type="System.String" Default="NameSpace" Description="Used to generate the Namespace declaration." %>
<%@ Property Category="Naming Convention" Name="CompanyName" Type="System.String" Default="YourCompany" Description="Used to generate the copyright declaration." %>
<%@ Property Category="Naming Convention" Name="ModuleName" Type="System.String" Default="YourModule" Description="" %>
<%@ Property Category="Naming Convention" Name="FriendlyName" Type="System.String" Default="Your Module" Description="Descriptive module name" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="CodeSmith.BaseTemplates" %>
<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Data" %>
Option Explicit On
'
' Module: <%=FriendlyName%>
' Copyright (c) <%= DateTime.Now.Year.ToString() %> <%=CompanyName%>
'  All rights reserved.
' 
' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED
' TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
' THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
' CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
' DEALINGS IN THE SOFTWARE.
'
Imports System
Imports System.Configuration
Imports System.Data
Imports System.Xml.Serialization
Imports DotNetNuke
Imports <%= Namespace %>.Modules.<%=ModuleName%>.Entities

Namespace <%= Namespace %>.Modules.<%=ModuleName%>.Components

    ''' <summary>
    ''' The feature base class for <%= ModuleName %>
    ''' </summary>
    ''' <remarks>
    ''' This class contains all the collections used for import and export processing
    ''' </remarks>
    ''' <history>
	''' Generated by CodeSmith on <%= DateTime.Now.ToLongDateString() %>
    ''' </history>
    ''' -----------------------------------------------------------------------------
    <Serializable(), XmlRoot("YourModule")> _
	Public Class <%= ModuleName %>FeatureBase

#Region "Private Members"
<% foreach(SchemaExplorer.TableSchema SourceTable in MultiSourceTable) { %>
        Private _<%=GetTableName(SourceTable)%>s As Generic.List(Of <%= GetClassNameInfo(SourceTable) %>)
<% } %>
#End Region

#Region "Constructors"
        ' initialization
        Public Sub New()
        End Sub
		
#End Region

#Region "Public Properties"
<% foreach(SchemaExplorer.TableSchema SourceTable in MultiSourceTable) { %>
		' <summary>
		' Gets and sets the <%= GetTableName(SourceTable) %>
		<% if (SourceTable.Description.Length > 0) { %>
		' <%= SourceTable.Description %>
		<% } %>
		' </summary>
        <XmlElement("<%=GetTableName(SourceTable)%>s")> _
		Public Property <%=GetTableName(SourceTable)%>s() As Generic.List(Of <%= GetClassNameInfo(SourceTable) %>)
			Get
				Return _<%= GetTableName(SourceTable) %>s
			End Get
			Set(ByVal Value As Generic.List(Of <%= GetClassNameInfo(SourceTable) %>))
				 _<%= GetTableName(SourceTable) %>s = Value
			End Set
		End Property	
		<% } %>
#End Region


    End Class

End Namespace

